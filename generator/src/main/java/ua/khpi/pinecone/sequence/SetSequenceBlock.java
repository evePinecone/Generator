/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ua.khpi.pinecone.sequence;

import ua.khpi.pinecone.answer.Report;
import ua.khpi.pinecone.sequence.block.FrobeniusFormsGenerator;
import ua.khpi.pinecone.sequence.block.SmithFormsGenerator;

import java.util.List;
import java.util.Map;

import static ua.khpi.pinecone.polynomial.form.InitPanel.setSequenceBlock;

/**
 * @author pinecone
 */
public class SetSequenceBlock extends javax.swing.JFrame {

    private Report report;

    /**
     * Creates new form SetSequenceBlock
     */
    public SetSequenceBlock(Report report) {
        this.report = report;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPaneSmith = new javax.swing.JScrollPane();
        smithOut = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        scrollPaneFrobenius = new javax.swing.JScrollPane();
        frobeniusOut = new javax.swing.JTextArea();
        closeSequenceBlock = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        smithOut.setColumns(20);
        smithOut.setRows(5);
        scrollPaneSmith.setViewportView(smithOut);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Smith normal forms");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Frobenius normal form");

        frobeniusOut.setColumns(20);
        frobeniusOut.setRows(5);
        scrollPaneFrobenius.setViewportView(frobeniusOut);

        closeSequenceBlock.setText("Close");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(27, 27, 27)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(scrollPaneSmith, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(scrollPaneFrobenius, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(closeSequenceBlock, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel2))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(scrollPaneSmith, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                        .addComponent(scrollPaneFrobenius)
                                        .addComponent(closeSequenceBlock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        //Listeners
        closeSequenceBlock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sequenceCloseSequenceBlockMouseClicked(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //TODO: rename
    public void setSequencesStatisticOut() {
        SmithFormsGenerator smithFormsGenerator = new SmithFormsGenerator(report);
        FrobeniusFormsGenerator frobeniusFormsGenerator = new FrobeniusFormsGenerator(report);
        smithOut.setText(generateStringFromReportSmith());
        frobeniusOut.setText(generateStringFromReportFrobenius());
    }

    private void sequenceCloseSequenceBlockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sequenceNextMouseClicked
        setSequenceBlock.setVisible(false);
    }

    private String generateStringFromReportSmith() {
        Map<List<List<Integer>>, Integer> smithForms = report.getSequencesSmith();

        StringBuilder sb = new StringBuilder();
        for (Map.Entry<List<List<Integer>>, Integer> listIntegerEntry : smithForms.entrySet()) {
            for (int i = 0; i < listIntegerEntry.getKey().size(); i++) {
                sb.append(listIntegerEntry.getKey().get(i)).append(System.lineSeparator());
            }
            sb.append("Wght Hemm = ").append(listIntegerEntry.getValue()).append(System.lineSeparator());
            sb.append("_______________________").append(System.lineSeparator());
        }
        return sb.toString();
    }

    private String generateStringFromReportFrobenius() {
        StringBuilder sb = new StringBuilder();

        Map<List<List<Integer>>, Integer> frobeniusForms = report.getSequencesFrobenius();

        for (Map.Entry<List<List<Integer>>, Integer> listIntegerEntry : frobeniusForms.entrySet()) {
            for (int i = 0; i < listIntegerEntry.getKey().size(); i++) {
                sb.append(listIntegerEntry.getKey().get(i)).append(System.lineSeparator());
            }
            sb.append("Wght Hemm = ").append(listIntegerEntry.getValue()).append(System.lineSeparator());
            sb.append("_______________________").append(System.lineSeparator());
        }

        return sb.toString();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeSequenceBlock;
    private javax.swing.JTextArea frobeniusOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane scrollPaneFrobenius;
    private javax.swing.JScrollPane scrollPaneSmith;
    private javax.swing.JTextArea smithOut;
    // End of variables declaration//GEN-END:variables
}
